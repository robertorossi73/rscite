# Define SciTE settings for autolisp and Scheme files.

file.patterns.lisp=*.lsp;*.lisp

filter.lisp=LISP (lsp lisp)|$(file.patterns.lisp)|

file.patterns.scheme=*.scm;*.smd;*.ss
filter.scheme=Scheme (scm smd)|$(file.patterns.scheme)|

lexer.$(file.patterns.lisp)=lisp
lexer.$(file.patterns.scheme)=lisp

#abbrev
abbreviations.$(file.patterns.lisp)=$(SciteDefaultHome)/abbrev/lisp.properties

# lisp build in functions, xlisp dialect, CAD lisp
keywords.$(file.patterns.lisp)=not defun + - * / = < > <= >= princ \
nil t T ~ 1+ 1-\
abs acad_colordlg acad_helpdlg acad-pop-dbmod acad-push-dbmod \
acad_strlsort acad_truecolorcli acad_truecolordlg \
acdimenableupdate acet-layerp-mode acet-layerp-mark \
acet-laytrans acet-ms-to-ps acet-ps-to-ms action_tile add_list \
alert alloc and angle angtof angtos append apply arx arxload \
arxunload ascii assoc atan atof atoi atom atoms-family autoarxload \
autoload boole boundp cadddr caddr cadr car cdr chr client_data_tile \
close command command-s cond cons cos cvunit defun-q defun-q-list-ref \
defun-q-list-set dictadd dictnext dictremove dictrename dictsearch \
dimx_tile dimy_tile distance distof done_dialog dumpallproperties end_image \
end_list entdel entget entlast entmake entmakex entmod entnext \
entsel entupd eq equal *error* eval exit exp expand expt fill_image \
findfile fix float foreach function gc gcd get_attr get_tile getangle \
getcfg getcname getcorner getdist getenv getfiled getint getkword \
getorient getpoint getpropertyvalue getreal getstring getvar graphscr grclear \
grdraw grread grtext grvecs handent help if initcommandversion initdia initget \
ispropertyreadonly inters \
itoa lambda last layoutlist \
layerstate-addlayers layerstate-compare layerstate-delete layerstate-export \
layerstate-getlastrestored layerstate-getlayers layerstate-getnames \
layerstate-has  layerstate-import layerstate-importfromdb layerstate-removelayers \
layerstate-rename layerstate-restore layerstate-save \
length list listp load load_dialog \
log logand logior lsh mapcar max mem member menucmd menugroup \
min minusp mode_tile namedobjdict nentsel nentselp new_dialog \
nth null numberp open or osnap polar prin1 print progn \
prompt quit quote read read-char read-line redraw regapp rem \
repeat reverse rtos set set_tile setcfg setpropertyvalue setenv setfunhelp setq \
setvar setview sin slide_image snvalid sqrt ssadd ssdel ssget \
ssgetfirst sslength ssmemb ssname ssnamex sssetfirst startapp \
start_dialog start_image start_list strcase strcat strlen subst \
substr tablet tblnext tblobjname tblsearch term_dialog terpri \
textbox textpage textscr trace trans type unload_dialog untrace \
vector_image ver vl-acad-defun vl-acad-undefun vl-arx-import vl-bb-ref \
vl-bb-set vl-catch-all-apply vl-catch-all-error-message \
vl-catch-all-error-p vl-cmdf vl-consp vl-directory-files vl-doc-export \
vl-doc-import vl-doc-ref vl-doc-set vl-every vl-exit-with-error \
vl-exit-with-value vl-file-copy vl-file-delete vl-file-directory-p \
vl-file-rename vl-file-size vl-file-systime vl-filename-base \
vl-filename-directory vl-filename-extension vl-filename-mktemp \
vl-get-resource vl-list* vl-list->string vl-list-exported-functions \
vl-list-length vl-list-loaded-vlx vl-load-all vl-load-com \
vl-load-reactors vl-mkdir vl-member-if vl-member-if-not vl-position \
vl-prin1-to-string vl-princ-to-string vl-propagate vl-registry-delete \
vl-registry-descendents vl-registry-read vl-registry-write vl-remove \
vl-remove-if vl-remove-if-not vl-some vl-sort vl-sort-i vl-string->list \
vl-string-elt vl-string-left-trim vl-string-mismatch vl-string-position \
vl-string-right-trim vl-string-search vl-string-subst vl-string-translate \
vl-string-trim vl-symbol-name vl-symbol-value vl-symbolp vl-unload-vlx \
vl-vbaload vl-vbarun vl-vlx-loaded-p vlax-3D-point vlax-add-cmd \
vlax-create-object vlax-curve-getArea vlax-curve-getClosestPointTo \
vlax-curve-getClosestPointToProjection vlax-curve-getDistAtParam \
vlax-curve-getDistAtPoint vlax-curve-getEndParam vlax-curve-getEndPoint \
vlax-curve-getFirstDeriv vlax-curve-getParamAtDist \
vlax-curve-getParamAtPoint vlax-curve-getPointAtDist \
vlax-curve-getPointAtParam vlax-curve-getSecondDeriv \
vlax-curve-getStartParam vlax-curve-getStartPoint vlax-curve-isClosed \
vlax-curve-isPeriodic vlax-curve-isPlanar vlax-dump-object \
vlax-ename->vla-object vlax-erased-p vlax-for vlax-get-acad-object \
vlax-get-object vlax-get-or-create-object vlax-get-property \
vlax-import-type-library vlax-invoke-method vlax-ldata-delete \
vlax-ldata-get vlax-ldata-list vlax-ldata-put vlax-ldata-test \
vlax-make-safearray vlax-make-variant vlax-map-collection \
vlax-method-applicable-p vlax-object-released-p vlax-product-key \
vlax-property-available-p vlax-put-property vlax-read-enabled-p \
vlax-release-object vlax-remove-cmd vlax-safearray-fill \
vlax-safearray-get-dim vlax-safearray-get-element \
vlax-safearray-get-l-bound vlax-safearray-get-u-bound \
vlax-safearray-put-element vlax-safearray-type vlax-safearray->list \
vlax-tmatrix vlax-typeinfo-available-p vlax-variant-change-type \
vlax-variant-type vlax-variant-value vlax-vla-object->ename \
vlax-write-enabled-p vlisp-compile vlr-acdb-reactor vlr-add \
vlr-added-p vlr-beep-reaction vlr-command-reactor \
vlr-current-reaction-name vlr-data vlr-data-set vlr-deepclone-reactor \
vlr-docmanager-reactor vlr-dwg-reactor vlr-dxf-reactor \
vlr-editor-reactor vlr-insert-reactor vlr-linker-reactor \
vlr-lisp-reactor vlr-miscellaneous-reactor vlr-mouse-reactor \
vlr-notification vlr-object-reactor vlr-owner-add vlr-owner-remove \
vlr-owners vlr-pers vlr-pers-list vlr-pers-p vlr-pers-release \
vlr-reaction-name vlr-reaction-set vlr-reactions vlr-reactors \
vlr-remove vlr-remove-all vlr-set-notification vlr-sysvar-reactor \
vlr-toolbar-reactor vlr-trace-reaction vlr-type vlr-types \
vlr-undo-reactor vlr-wblock-reactor vlr-window-reactor \
vlr-xref-reactor vports wcmatch while write-char write-line xdroom \
xdsize zerop lpad rpad tan trim \
align cal mirror3d rotate3d solprof

word.chars.lisp=$(chars.alpha)$(chars.numeric)_-<>.:#@$%^&=*!?~
word.characters.$(file.patterns.lisp)=$(word.chars.lisp)

# Scheme functions, R5RS
keywords.$(file.patterns.scheme)= + - * / = < > <= >= => \
abs acos and angle append apply asin assoc assoc assq assv atan \
begin boolean? \
caar cadr call-with-current-continuation call/cc \
call-with-input-file call-with-output-file call-with-values \
car cdr \
caar cadr cdar cddr \
caaar caadr cadar caddr cdaar cdadr cddar cdddr \
caaaar caaadr caadar caaddr cadaar cadadr caddar cadddr \
cdaaar cdaadr cdadar cdaddr cddaar cddadr cdddar cddddr \
case ceiling char->integer \
char-alphabetic? char-ci<=? char-ci<? char-ci=? char-ci>=? char-ci>? \
char-downcase char-lower-case? char-numeric? char-ready? \
char-upcase char-upper-case? char-whitespace? \
char<=? char<? char=? char>=? char>? char? \
close-input-port close-output-port complex? cond cons cos \
current-input-port current-output-port \
define define-syntax delay denominator display do dynamic-wind \
else eof-object? eq? equal? eqv? eval even? exact->inexact exact? \
exp expt \
floor for-each force \
gcd \
if imag-part inexact->exact inexact? input-port? integer->char integer? interaction-environment \
lambda lcm length let let* let-syntax letrec letrec-syntax \
list list->string list->vector list-ref list-tail list? load log \
magnitude make-polar make-rectangular make-string make-vector \
map max member memq memv min modulo \
negative? newline not null-environment null? number->string number? numerator \
odd? open-input-file open-output-file or output-port? \
pair? peek-char input-port? output-port? positive? procedure? \
quasiquote quote quotient \
rational? rationalize read read-char real-part real? remainder reverse round \
scheme-report-environment set! set-car! set-cdr! sin sqrt string \
string->list string->number string->symbol string-append \
string-ci<=? string-ci<? string-ci=? string-ci>=? string-ci>? \
string-copy string-fill! string-length string-ref string-set! \
string<=? string<? string=? string>=? string>? string? \
substring symbol->string symbol? syntax-rules \
transcript-off transcript-on truncate \
unquote unquote-splicing \
values vector vector->list vector-fill! vector-length vector-ref vector-set! vector? \
with-input-from-file with-output-to-file write write-char \
zero?

word.chars.scheme=$(chars.alpha)$(chars.numeric)!$%&*/:<=>?^_~+-.@
word.characters.$(file.patterns.scheme)=$(word.chars.scheme)


comment.block.lisp=;
comment.box.start.lisp=;;
comment.box.middle.lisp=;;
comment.box.end.lisp=;;

calltip.lisp.parameters.start= 
calltip.lisp.parameters.end=)
calltip.lisp.parameters.separators= 
calltip.lisp.end.definition=)
#NOTA : eliminare il carattere spazio per riabilitare i calltip automatici
#calltip.lisp.word.characters= _-.$(chars.alpha)
calltip.lisp.word.characters=_-.$(chars.alpha)

#ingore case with autocomplete
autocomplete.lisp.ignorecase=1
#start autocomplete with
autocomplete.lisp.start.characters=_:

# LISP styles

# Default
style.lisp.32=$(font.base)
# White space
style.lisp.0=fore:#808080
# Line Comment
style.lisp.1=$(colour.code.comment.box),$(font.code.comment.box)
# Number
style.lisp.2=$(colour.number)
# Keyword
style.lisp.3=$(colour.keyword),bold
# String
style.lisp.6=$(colour.string)
# Operators
style.lisp.10=$(colour.operator),bold
# Identifiers
style.lisp.9=
# End of line where string is not closed
style.lisp.8=fore:#000000,font:Verdana,size:9,back:#fefecc,eolfilled
# Matched Operators
#style.lisp.34=fore:#0000FF,bold
style.lisp.34=fore:#FF0000,bold
style.lisp.35=fore:#FF0000,bold
# Braces are only matched in operator style
braces.lisp.style=10

if PLAT_WIN
  #command.go.$(file.patterns.scheme)=c:\tools\pscheme\pscheme.exe /r $(FilePath)
  command.go.$(file.patterns.scheme)=c:\tools\gambit\gsi.exe -f $(FilePath)
  #command.go.$(file.patterns.scheme)=c:\tools\plt\mzscheme.exe -r $(FilePath)
  command.go.subsystem.$(file.patterns.scheme)=0
