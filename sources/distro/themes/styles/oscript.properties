##############################################################################
# Define Style definitions supported by the lexical states. There are multiple
# states for language keyword groups although they all are reserved words; to
# be able ot assign them different styles.

# Default text style.
style.oscript.0=$(style.*.32)
# Single-line comment.
style.oscript.1=$(colour.code.comment.line),$(font.code.comment.line)
# Multi-line comment.
style.oscript.2=$(colour.code.comment.box),$(font.code.comment.box)
# Documentation comment; a text delimited by preprocessor directives
# #ifdef DOC and #endif; the value of DOC is supposed to be never defined.
style.oscript.3=$(colour.code.comment.doc),$(font.code.comment.doc)
# Preprocessor directive.
style.oscript.4=$(colour.preproc)
# Number.
style.oscript.5=$(colour.number)
# String enclosed in single quotes (apostrophes).
style.oscript.6=$(colour.string)
# String enclosed in double quotes (quotation marks).
style.oscript.7=$(colour.string)
# Constant literal. See the property keywords2 above.
style.oscript.8=$(colour.preproc)
# Identifier of a variable, an object or a script.
style.oscript.9=
# Server-global variable (prefixed by $).
style.oscript.10=$(colour.preproc)
# Language native keyword or reserved word. See the property keywords above.
style.oscript.11=$(colour.keyword),bold
# Operator; either symbolic or literal. See the property keywords3 above.
style.oscript.12=$(colour.operator),bold
# Label to jump to with the GoTo statement.
style.oscript.13=$(colour.keyword2)
# Type available in the language, in kernel or code modules.
# See the property keywords4 above.
style.oscript.14=$(colour.keyword2)
# Global function in the language, in kernel or code modules.
# See the property keywords5 above.
style.oscript.15=$(colour.keyword)
# Static built-in object. See the property keywords6 above.
style.oscript.16=$(colour.keyword)
# Object property.
style.oscript.17=
# Object method.
style.oscript.18=
