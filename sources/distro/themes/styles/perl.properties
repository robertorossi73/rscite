
colour.bash.heredoc=$(colour.embedded.comment)

# Perl styles
# The perl styles are set to lots of different foreground and background colours as an
# aid to debugging SciTE's Perl lexer - not because this is a good way to display Perl.
style.perl.32=$(style.*.32)
# White space
style.perl.0=$(style.*.32)
# Error
style.perl.1=$(colour.error)
# Comment
style.perl.2=$(colour.code.comment.box),$(font.code.comment.box)
# POD: = at beginning of line
style.perl.3=$(colour.preproc),eolfilled
# Number
style.perl.4=$(colour.number)
# Keyword
style.perl.5=$(colour.keyword),bold
# Double quoted string
style.perl.6=$(colour.string)
# Single quoted string
style.perl.7=$(colour.char)
# Symbols / Punctuation. Currently not used by LexPerl.
style.perl.8=$(colour.notused),$(font.notused)
# Preprocessor. Currently not used by LexPerl.
style.perl.9=$(colour.notused),$(font.notused)
# Operators
style.perl.10=$(colour.operator),bold
# Identifiers (functions, etc.)
style.perl.11=$(style.*.32)
# Scalars: $var
style.perl.12=$(colour.operator)
# Array: @var
style.perl.13=$(colour.operator)
# Hash: %var
style.perl.14=$(colour.operator)
# Symbol table: *var
style.perl.15=$(colour.operator)
# SCE_PL_VARIABLE_INDEXER allocated but unused
style.perl.16=$(colour.error)
# Regex: /re/ or m{re}
style.perl.17=$(colour.operator)
# Substitution: s/re/ore/
style.perl.18=$(colour.operator)
# Long Quote (qq, qr, qw, qx) -- obsolete: replaced by qq, qx, qr, qw
style.perl.19=$(colour.operator)
# Back Ticks
style.perl.20=$(colour.operator)
# Data Section: __DATA__ or __END__ at beginning of line
style.perl.21=$(colour.preproc),eolfilled
# Here-doc (delimiter)
style.perl.22=$(colour.code.comment.doc)
# Here-doc (single quoted, q)
style.perl.23=$(colour.code.comment.doc),eolfilled,notbold
# Here-doc (double quoted, qq)
style.perl.24=$(colour.code.comment.doc),eolfilled,bold
# Here-doc (back ticks, qx)
style.perl.25=$(colour.code.comment.doc),eolfilled,italics
# Single quoted string, generic
style.perl.26=$(colour.string),notbold
# qq = Double quoted string
style.perl.27=$(style.perl.6)
# qx = Back ticks
style.perl.28=$(style.perl.20)
# qr = Regex
style.perl.29=$(style.perl.17)
# qw = Array
style.perl.30=$(style.perl.13)
# POD: verbatim paragraphs
style.perl.31=$(colour.string),eolfilled
# subroutine prototype
style.perl.40=$(style.perl.10),italics
# format identifier
style.perl.41=$(colour.keyword),bold
# format body
style.perl.42=$(colour.keyword),eolfilled
# translation: tr{}{} y{}{}
style.perl.44=$(style.perl.18)

# Double quoted string (interpolated variable)
style.perl.43=$(style.perl.6),bold
# Regex: /re/ or m{re} (interpolated variable)
style.perl.54=$(style.perl.17),bold
# Substitution: s/re/ore/ (interpolated variable)
style.perl.55=$(style.perl.18),bold
# Back Ticks (interpolated variable)
style.perl.57=$(style.perl.20),bold
# Here-doc (double quoted, qq) (interpolated variable)
style.perl.61=$(style.perl.24),bold
# Here-doc (back ticks, qx) (interpolated variable)
style.perl.62=$(style.perl.61)
# qq = Double quoted string (interpolated variable)
style.perl.64=$(style.perl.43)
# qx = Back ticks (interpolated variable)
style.perl.65=$(style.perl.57)
# qr = Regex (interpolated variable)
style.perl.66=$(style.perl.54)

# Bash styles
# The bash styles are set to lots of different foreground and background colours as an
# aid to debugging SciTE's Bash lexer - not because this is a good way to display Bash.
style.bash.32=
# White space
style.bash.0=$(style.*.32),$(font.base)
# Error
style.bash.1=$(colour.error)
# Comment
style.bash.2=$(colour.code.comment.box),$(font.code.comment.box)
# Number
style.bash.3=$(colour.number)
# Keyword
style.bash.4=$(colour.keyword),bold
# Double quoted string
style.bash.5=$(colour.string),$(font.monospace)
# Single quoted string
style.bash.6=$(colour.char),$(font.monospace)
# Operators
style.bash.7=$(colour.operator),bold
# Identifiers (functions, etc.)
style.bash.8=$(style.*.32)
# Scalars: $var
style.bash.9=$(style.*.32),bold
# Parameter expansion: ${var}
style.bash.10=$(style.*.32),bold
# Back Ticks
style.bash.11=$(colour.operator)
# Here-doc (delimiter)
style.bash.12=$(colour.code.comment.doc)
# Here-doc (single quoted, q)
style.bash.13=$(colour.code.comment.doc)
