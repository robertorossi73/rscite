# HTML and XML share lexing code so use the same style numbers
# Hypertext Markup Language

# Text
style.hypertext.0=$(style.*.32)
# Tags
style.hypertext.1=$(colour.keyword)
# Unknown Tags
style.hypertext.2=$(colour.error)
# Attributes
style.hypertext.3=$(colour.keyword2)
# Unknown Attributes
style.hypertext.4=$(colour.error)
# Numbers
style.hypertext.5=$(colour.number)
# Double quoted strings
style.hypertext.6=$(colour.string)
# Single quoted strings
style.hypertext.7=$(colour.string)
# Other inside tag, including space and '='
style.hypertext.8=$(colour.operator)
# Comment
style.hypertext.9=$(colour.code.comment.box)
# Entities
style.hypertext.10=$(colour.operator)
# XML style tag ends '/>'
style.hypertext.11=$(colour.keyword)
# XML identifier start '<?'
style.hypertext.12=$(colour.keyword)
# XML identifier end '?>'
style.hypertext.13=$(colour.keyword)
# Internal state which should never be visible
style.hypertext.14=$(colour.keyword2)
# ASP <% ... %>
style.hypertext.15=$(colour.keyword)
# ASP <% ... %>
style.hypertext.16=$(colour.keyword)
# CDATA
style.hypertext.17=$(colour.keyword3)
# PHP
style.hypertext.18=$(colour.keyword)
# Unquoted values
style.hypertext.19=$(colour.char)
# JSP Comment <%-- ... --%>
style.hypertext.20=$(colour.code.comment.box)
# SGML tags <! ... >
style.hypertext.21=$(colour.code.comment.box)
# SGML command
style.hypertext.22=$(colour.code.comment.box),bold
# SGML 1st param
style.hypertext.23=$(colour.code.comment.box)
# SGML double string
style.hypertext.24=$(colour.string)
# SGML single string
style.hypertext.25=$(colour.string)
# SGML error
style.hypertext.26=$(colour.error)
# SGML special (#XXXX type)
style.hypertext.27=$(colour.keyword2)
# SGML entity
style.hypertext.28=$(colour.keyword)
# SGML comment
style.hypertext.29=$(colour.code.comment.box)
# SGML first parameter - lexer internal. It is an error if any text is in this style.
style.hypertext.30=fore:#808000,back:#FF0000
# SGML block
style.hypertext.31=fore:#000066,back:#CCCCE0
# Some reasonable background colours found in the default Windows palette
# Off White #FFFBF0    Light green #C0DCC0    Light Blue #A6CAF0
# Matched Operators
style.hypertext.34=$(style.*.34)
style.hypertext.35=$(style.*.35)

# Embedded Javascript
fontcolour.js=$(colour.embedded.js),$(font.js)
# JS Start - allows eol filled background to not start on same line as SCRIPT tag
style.hypertext.40=$(colour.keyword)
# JS Default
style.hypertext.41=$(style.*.32)
# JS Comment
style.hypertext.42=$(colour.code.comment.box),$(fontcolour.js),eolfilled
# JS Line Comment
style.hypertext.43=$(colour.code.comment.line),$(fontcolour.js)
# JS Doc comment
style.hypertext.44=$(colour.code.comment.doc),bold,$(fontcolour.js),eolfilled
# JS Number
style.hypertext.45=$(colour.number),$(fontcolour.js)
# JS Word
style.hypertext.46=$(style.*.32)
# JS Keyword
style.hypertext.47=$(colour.keyword),bold,$(fontcolour.js)
# JS Double quoted string
style.hypertext.48=$(colour.string),$(fontcolour.js)
# JS Single quoted string
style.hypertext.49=$(colour.string),$(fontcolour.js)
# JS Symbols
style.hypertext.50=$(colour.operator),bold,$(fontcolour.js)
# JavaScript EOL
style.hypertext.51=eolfilled
# JavaScript RegEx
style.hypertext.52=

# ASP Javascript
# JS Start - allows eol filled background to not start on same line as SCRIPT tag
style.hypertext.55=
# JS Default
style.hypertext.56=$(style.*.32)
# JS Comment
style.hypertext.57=$(colour.code.comment.box)
# JS Line Comment
style.hypertext.58=$(colour.code.comment.line)
# JS Doc comment
style.hypertext.59=$(colour.code.comment.doc)
# JS Number
style.hypertext.60=$(colour.number)
# JS Word
style.hypertext.61=$(colour.keyword2)
# JS Keyword
style.hypertext.62=$(colour.keyword)
# JS Double quoted string
style.hypertext.63=$(colour.string)
# JS Single quoted string
style.hypertext.64=$(colour.string)
# JS Symbols
style.hypertext.65=$(style.*.32)
# JavaScript EOL
style.hypertext.66=
# JavaScript RegEx
style.hypertext.67=

# Embedded VBS
# Start
style.hypertext.70=
# Default
style.hypertext.71=$(style.*.32),eolfilled
# Comment
style.hypertext.72=$(colour.code.comment.box)
# Number
style.hypertext.73=$(colour.number)
# KeyWord
style.hypertext.74=$(colour.keyword)
# String
style.hypertext.75=$(colour.string)
# Identifier
style.hypertext.76=$(style.*.32)
# Unterminated string
style.hypertext.77=$(colour.error)

# ASP VBS
# Start
style.hypertext.80=
# Default
style.hypertext.81=$(style.*.32)
# Comment
style.hypertext.82=$(colour.code.comment.line)
# Number
style.hypertext.83=$(colour.number)
# KeyWord
style.hypertext.84=$(colour.keyword)
# String
style.hypertext.85=$(colour.string)
# Identifier
style.hypertext.86=$(style.*.32)
# Unterminated string
style.hypertext.87=$(colour.error)

# Embedded Python
style.hypertext.90=$(style.*.32)
style.hypertext.91=$(style.*.32),eolfilled
# Comment
style.hypertext.92=$(colour.code.comment.line),eolfilled
# Number
style.hypertext.93=$(colour.number),eolfilled
# String
style.hypertext.94=$(colour.string),eolfilled
# Single quoted string
style.hypertext.95=$(colour.string),eolfilled
# Keyword
style.hypertext.96=$(colour.keyword),eolfilled
# Triple quotes
style.hypertext.97=$(colour.string),eolfilled
# Triple double quotes
style.hypertext.98=$(colour.string),eolfilled
# Class name definition
style.hypertext.99=$(colour.keyword2),eolfilled
# Function or method name definition
style.hypertext.100=$(colour.keyword),eolfilled
# Operators
style.hypertext.101=bold,$(colour.operator),eolfilled
# Identifiers
style.hypertext.102=$(style.*.32)

# PHP complex variable
style.hypertext.104=italics,$(style.*.32)

# ASP Python
style.hypertext.105=$(style.*.32)
style.hypertext.106=$(style.*.32),eolfilled
# Comment
style.hypertext.107=$(colour.code.comment.line),eolfilled
# Number
style.hypertext.108=$(colour.number),eolfilled
# String
style.hypertext.109=$(colour.string),eolfilled
# Single quoted string
style.hypertext.110=$(colour.string),eolfilled
# Keyword
style.hypertext.111=$(colour.keyword),eolfilled
# Triple quotes
style.hypertext.112=$(colour.string),eolfilled
# Triple double quotes
style.hypertext.113=$(colour.string),eolfilled
# Class name definition
style.hypertext.114=$(colour.keyword2),eolfilled
# Function or method name definition
style.hypertext.115=$(colour.keyword),eolfilled
# Operators
style.hypertext.116=$(colour.operator),eolfilled
# Identifiers
style.hypertext.117=$(style.*.32),eolfilled

# PHP
# Default
style.hypertext.118=$(style.*.32),eolfilled
# Double quoted String
style.hypertext.119=$(colour.string)
# Single quoted string
style.hypertext.120=$(colour.string)
# Keyword
style.hypertext.121=$(colour.keyword)
# Number
style.hypertext.122=$(colour.number)
# Variable
style.hypertext.123=$(colour.keyword2)
# Comment
style.hypertext.124=$(colour.code.comment.box)
# One line comment
style.hypertext.125=fore:$(colour.code.comment.line)
# PHP variable in double quoted string
style.hypertext.126=$(colour.keyword2),italics
# PHP operator
style.hypertext.127=$(colour.operator)

# XML: eXtensible Markup Language
# For XML, there is no list of known tags or attributes so all are coloured known

# Default
style.xml.0=$(style.*.32)
# Tags
style.xml.1=$(colour.keyword)
# Unknown Tags
style.xml.2=$(colour.error)
# Attributes
style.xml.3=$(colour.keyword2)
# Unknown Attributes
style.xml.4=$(colour.error)
# Numbers
style.xml.5=$(colour.number)
# Double quoted strings
style.xml.6=$(colour.string)
# Single quoted strings
style.xml.7=$(colour.string)
# Other inside tag, including space and '='
style.xml.8=$(colour.operator)
# Comment
style.xml.9=$(colour.code.comment.box)
# Entities
style.xml.10=$(style.*.32)
# XML style tag ends '/>'
style.xml.11=$(colour.keyword)
# XML identifier start '<?'
style.xml.12=$(colour.keyword)
# XML identifier end '?>'
style.xml.13=$(colour.keyword)
# CDATA
style.xml.17=$(colour.keyword3)
# Question
style.xml.18=$(colour.string)
# Unquoted Value
style.xml.19=$(style.*.32)
# SGML tags <! ... >
style.xml.21=$(colour.code.comment.box)
# SGML command
style.xml.22=$(colour.string)
# SGML 1st param
style.xml.23=$(style.*.32)
# SGML double string
style.xml.24=$(colour.string)
# SGML single string
style.xml.25=$(colour.string)
# SGML error
style.xml.26=$(colour.error)
# SGML special (#XXXX type)
style.xml.27=$(colour.keyword)
# SGML entity
style.xml.28=$(colour.keyword2)
# SGML comment
style.xml.29=$(colour.code.comment.box)
# SGML block
style.xml.31=$(style.*.32)

