
# Assembler Styles
#style.asm.32=fore:#808080,font:Verdana,size:8
#style.as.32=$(style.asm.32)
# Default
style.asm.0=
style.asm.0=$(style.asm.0)
# Comment
style.asm.1=$(colour.code.comment.line)
style.as.1=$(style.asm.1)
#$(colour.code.comment.line),font:Comic Sans MS,size:8
# Number
style.asm.2=$(colour.number)
style.as.2=$(style.asm.2)
# String
style.asm.3=$(colour.string)
style.as.3=$(style.asm.3)
# Operator
style.asm.4=$(colour.operator),bold
style.as.4=$(style.asm.4)
# Identifier
style.asm.5=
style.as.5=$(style.asm.5)
# CPU instruction
style.asm.6=$(colour.keyword),bold
style.as.6=$(style.asm.6)
#fore:#0000ff
# FPU instruction
style.asm.7=$(colour.keyword)
style.as.7=$(style.asm.7)
# Register
style.asm.8=$(colour.keyword),bold
style.as.8=$(style.asm.8)
# assembler Directive
style.asm.9=$(colour.keyword)
style.as.9=$(style.asm.9)
# assembler Directive Operand
style.asm.10=$(colour.operator)
style.as.10=$(style.asm.10)
# Comment block (GNU as /*...*/ syntax, unimplemented)
style.asm.11=$(colour.code.comment.box),$(font.code.comment.box)
style.as.11=$(style.asm.11)
# Character/String (single quote) (also character prefix in GNU as)
style.asm.12=$(colour.char)
style.as.12=$(style.asm.12)
# End of line where string is not closed
style.asm.13=$(colour.error),eolfilled
style.as.13=$(style.asm.13)
# Extended instructions
style.asm.14=$(colour.keyword2)
style.as.14=$(style.asm.14)
# Comment directive
style.asm.15=$(colour.code.comment.line)
style.as.15=$(style.asm.15)
