# C++ styles

# Default
style.cpp.32=$(style.*.32)
# White space
style.cpp.0=$(style.*.32)
# Comment: /* */.
style.cpp.1=$(colour.code.comment.box),$(font.code.comment.box)
# Line Comment: //.
style.cpp.2=$(colour.code.comment.line),$(font.code.comment.line)
# Doc comment: block comments beginning with /** or /*!
style.cpp.3=$(colour.code.comment.doc),$(font.code.comment.doc)
# Number
style.cpp.4=$(colour.number)
# Keyword
style.cpp.5=$(colour.keyword),bold
# Double quoted string
style.cpp.6=$(colour.string)
# Single quoted string
style.cpp.7=$(colour.char)
# UUIDs (only in IDL)
style.cpp.8=$(colour.number)
# Preprocessor
style.cpp.9=$(colour.preproc)
# Operators
style.cpp.10=$(colour.operator),bold
# Identifiers
style.cpp.11=
# End of line where string is not closed
style.cpp.12=fore:#000000,$(font.monospace),back:#E0C0E0,eolfilled
# Verbatim strings for C#
style.cpp.13=$(colour.string),eolfilled
# Regular expressions for JavaScript
style.cpp.14=fore:#3F7F3F,$(font.monospace),back:#E0F0FF,eolfilled
# Doc Comment Line: line comments beginning with /// or //!.
style.cpp.15=$(colour.code.comment.doc),$(font.code.comment.doc)
# Keywords2
style.cpp.16=$(colour.keyword2)
# Comment keyword
style.cpp.17=$(colour.code.comment.doc),$(font.code.comment.doc)
# Comment keyword error
style.cpp.18=$(colour.code.comment.doc),$(font.code.comment.doc)
# Global class
style.cpp.19=$(colour.keyword)
# Raw strings for C++0x
style.cpp.20=$(colour.string),eolfilled
# Triple-quoted strings for Vala
style.cpp.21=$(font.monospace),fore:#007F00,back:#E0FFE0,eolfilled
# Hash-quoted strings for Pike
style.cpp.22=$(font.monospace),fore:#007F00,back:#E7FFD7,eolfilled
# Preprocessor stream comment
style.cpp.23=$(colour.preproc)
# Preprocessor stream doc comment
style.cpp.24=$(colour.code.comment.doc)
# User defined literals
style.cpp.25=$(colour.preproc)
# Task Marker
style.cpp.26=$(colour.keyword),$(font.code.comment.line)
# Escape sequence
style.cpp.27=$(colour.string)

# Inactive states are 64 greater than their active counterparts

# White space
style.cpp.64=$(style.*.32)
# Comment: /* */.
style.cpp.65=$(colour.code.comment.box)
# Line Comment: //.
style.cpp.66=$(colour.code.comment.line)
# Doc comment: block comments beginning with /** or /*!
style.cpp.67=$(colour.code.comment.doc)
# Number
style.cpp.68=$(colour.number)
# Keyword
style.cpp.69=$(colour.keyword)
# Double quoted string
style.cpp.70=$(colour.string)
# Single quoted string
style.cpp.71=$(colour.char)
# UUIDs (only in IDL)
style.cpp.72=$(colour.preproc)
# Preprocessor
style.cpp.73=$(colour.preproc)
# Operators
style.cpp.74=$(colour.operator)
# Identifiers
style.cpp.75=$(colour.keyword2)
# End of line where string is not closed
style.cpp.76=$(style.cpp.12),fore:#000000
# Verbatim strings for C#
style.cpp.77=$(style.cpp.13)
# Regular expressions for JavaScript
style.cpp.78=$(style.cpp.14),fore:#7FAF7F
# Doc Comment Line: line comments beginning with /// or //!.
style.cpp.79=$(style.cpp.15)
# Keywords2
style.cpp.80=$(style.cpp.16)
# Comment keyword
style.cpp.81=$(style.cpp.17)
# Comment keyword error
style.cpp.82=$(style.cpp.18)
# Raw strings for C++0x
style.cpp.84=$(style.cpp.20)
# Triple-quoted strings for Vala
style.cpp.85=$(style.cpp.21)
# Hash-quoted strings for Pike
style.cpp.86=$(style.cpp.22)
# Preprocessor stream comment
style.cpp.87=$(style.cpp.23)
# Preprocessor stream doc comment
style.cpp.88=$(style.cpp.23)
# User defined literals
style.cpp.89=$(colour.char)
# Task Marker
style.cpp.90=$(style.cpp.26)
