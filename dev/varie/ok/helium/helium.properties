# Define SciTE settings for Helium files

file.patterns.helium=*.he

filter.helium=Helium Files (he)|*.he|

lexer.$(file.patterns.helium)=cpp

keywordclass.helium=boolean break case char class const continue false final \
for foreach if instanceof int long new null return struct switch true \
typedef void while AM AM_PM ANY APRIL AUGUST BASELINE BLURRED BOTTOM Buffer \
ByteArray Calendar Camera Canvas Choice Component Config DATE DAY_OF_MONTH \
DAY_OF_WEEK DECEMBER DECIMAL DIMMED EMAILADDR FACE_MONOSPACE FACE_PROPORTIONAL \
FACE_SYSTEM FEBRUARY Flow FOCUS_CHANGED FOCUSABLE FOCUSED Font FORMAT_DATE \
FORMAT_DATETIME FORMAT_TIME FRIDAY Graphics HCENTER HEXPAND HLIMIT HOUR \
HOUR_OF_DAY HyperText Image INITIAL_CAPS_SENTENCE INITIAL_CAPS_WORD Input \
InputStream IntArray IS_BINARY IS_BINDING IS_BOOLEAN IS_INT IS_LIST IS_NULL \
IS_STRING ITEM_CANCEL ITEM_CHANGED JANUARY JULY JUNE KEY_BACK KEY_BACKSPACE \
KEY_CR KEY_DELETE KEY_DOWN KEY_ENTER KEY_ESC KEY_FIRE KEY_LEFT KEY_OK \
KEY_PRESSED KEY_RELEASED KEY_REPEATED KEY_RIGHT KEY_TAB KEY_UP Label LEFT \
LINEFEED List Map MARCH MARK_READ MATH_SCALE MAY Menu MenuItem MILLISECOND \
MINUTE MONDAY MONTH NativeInput NON_PREDICTIVE NOVEMBER NUMERIC Object OCTOBER \
ONE_LINE OPAQUE OPEN_HELP OPEN_HOME OPEN_LINK OPEN_MENU OPEN_SETTINGS \
OutputStream PASSWORD PHONENUMBER Picture Player PM Popup Progress Prompt \
RIGHT SATURDAY Scrollable SECOND SEND_WIDGET SENSITIVE SEPTEMBER Shell \
SHELL_CLOSED SHELL_OPENED SIZE_LARGE SIZE_MEDIUM SIZE_SMALL SOFTKEY_BACK \
SOFTKEY_MIDDLE SOFTKEY_OK STATE_DESTROYED STATE_ERROR STATE_INCOMPLETE \
STATE_INITIAL STATE_LOADING STATE_STARTED STATE_STOPPED Store String Style \
STYLE_BOLD STYLE_ITALIC STYLE_PLAIN STYLE_UNDERLINED SUNDAY System Text \
THURSDAY Ticker Timer TimeZone TOP TUESDAY URL Value VCENTER View \
VIEWPORT_CHANGED VISIBLE WEDNESDAY Widget WIDGET_CLOSED WRAP YEAR \
actionPerformed closeWidget createElement getMenu getSoftKey handleMessage \
keyAction messageReceived onFailure onSuccess openWidget paint \
parametersChanged startWidget stopWidget timerEvent updateReceived \
updateWidget abs \
call cos createMaximizedView createMinimizedView createView currentTimeMillis \
decodeHex decodeString dumpTree encodeHex encodeString encodeURL flushScreen \
format getAvailableTimeZones getClass getConfig getDefaultTimeZone \
getDisplaySize getFont getImage getMemoryUsage getMinimizedView getParameter \
getParameters getPicture getPlayer getProperty getScreenSize getServices \
getStore getStyle getTimeZone getUsername getVersion getWidgetID getWidgetName \
isDashboardVisible isOnline isRegistered isUsingHTTP max min NULL parseBoolean \
parseInt parseLong parseSize playNotifySound playSound popShell printf \
pushShell random schedule setBubble setMinimizedView setParameter \
setParameters setUpdated sin slideIn slideOut

keywords.$(file.patterns.helium)=$(keywordclass.helium)

# keywords2 is for highlighting user defined keywords or function calls or similar
#keywords2.$(file.patterns.helium)=file

# keywords3 is for doc comment keywords, highlighted in style 17
#keywords3.$(file.patterns.helium)=a addindex addtogroup anchor arg attention

#word.chars.helium=$(chars.alpha)$(chars.numeric)_#
#word.characters.$(file.patterns.helium)=$(word.chars.helium)

comment.block.helium=//~
comment.stream.start.helium=/*
comment.stream.end.helium=*/
comment.box.start.helium=/*
comment.box.middle.helium= *
comment.box.end.helium= */
fold.comment=1
fold.preprocessor=1

# Default
style.cpp.32=$(font.base)
# White space
style.cpp.0=fore:#808080
# Comment
style.cpp.1=$(colour.code.comment.box),$(font.code.comment.box)
# Line Comment
style.cpp.2=$(colour.code.comment.line),$(font.code.comment.line)
# Doc comment
style.cpp.3=$(colour.code.comment.doc),$(font.code.comment.doc)
# Number
style.cpp.4=$(colour.number)
# Keyword
style.cpp.5=$(colour.keyword),bold
# Double quoted string
style.cpp.6=$(colour.string)
# Single quoted string
style.cpp.7=$(colour.char)
# UUIDs (only in IDL)
style.cpp.8=fore:#804080
# Preprocessor
style.cpp.9=$(colour.preproc)
# Operators
style.cpp.10=$(colour.operator),bold
# Identifiers
style.cpp.11=
# End of line where string is not closed
style.cpp.12=fore:#000000,$(font.monospace),back:#E0C0E0,eolfilled
# Verbatim strings for C#
style.cpp.13=fore:#007F00,$(font.monospace),back:#E0FFE0,eolfilled
# Regular expressions for JavaScript
style.cpp.14=fore:#3F7F3F,$(font.monospace),back:#E0F0FF,eolfilled
# Doc Comment Line
style.cpp.15=$(colour.code.comment.doc),$(font.code.comment.doc)
# Keywords2
style.cpp.16=fore:#B00040
# Comment keyword
style.cpp.17=fore:#3060A0,$(font.code.comment.doc)
# Comment keyword error
style.cpp.18=fore:#804020,$(font.code.comment.doc)
# Braces are only matched in operator style
braces.cpp.style=10

